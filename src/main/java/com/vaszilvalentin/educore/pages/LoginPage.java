/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.vaszilvalentin.educore.pages;

import com.vaszilvalentin.educore.auth.AuthManager;
import com.vaszilvalentin.educore.utils.ResizableImage;
import com.vaszilvalentin.educore.window.WindowManager;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author vaszilvalentin
 */
public class LoginPage extends javax.swing.JPanel {

    /**
     * Creates new form LoginPage
     */
    WindowManager windowManager;

    public LoginPage(WindowManager windowManager) {
        this.windowManager = windowManager;
        initComponents();

        // Initialize the theme listener
        UIManager.addPropertyChangeListener(new ThemeChangeListener());

        // Set initial color
        updateContainerColor();
    }
    
    /**
     * Updates the background color and border of the container
     * to match the current theme defined in UIManager.
     */
    private void updateContainerColor() {
        container.setBackground(UIManager.getColor("LoginForm.background"));
        container.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(
                        UIManager.getColor("Container.borderColor"),
                        1,
                        true
                    ),
                    BorderFactory.createEmptyBorder(20, 20, 20, 20)
                ));
    }

    /**
     * Listener that reacts to theme (Look and Feel) changes.
     */
    private class ThemeChangeListener implements PropertyChangeListener {

        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            if ("lookAndFeel".equals(evt.getPropertyName())
                    || evt.getPropertyName().startsWith("laf.styleChanged")) {
                SwingUtilities.invokeLater(() -> {
                    updateContainerColor();
                });
            }
        }
    }
    
    /**
     * Called when this component is removed from its parent.
     * Used to clean up property change listeners to avoid memory leaks.
     */
    @Override
    public void removeNotify() {
        super.removeNotify();
        // Remove all property change listeners of our type
        PropertyChangeListener[] listeners = UIManager.getPropertyChangeListeners();
        for (PropertyChangeListener listener : listeners) {
            if (listener instanceof ThemeChangeListener) {
                UIManager.removePropertyChangeListener(listener);
            }
        }
    }

    // Toggle password visibility (show/hide)
    private void togglePasswordVisibility() {
        if (showPasswordCheckBox.isSelected()) {
            passwordField.setEchoChar((char) 0); // Show password
        } else {
            passwordField.setEchoChar('â€¢'); // Hide password
        }
    }

    /**
     * Authenticates the user credentials and navigates to Home page if successful.
     */
    private void login() {
        String email = emailField.getText();
        String password = new String(passwordField.getPassword());

        // Authenticate using AuthManager
        boolean isAuthenticated = AuthManager.authenticate(email, password);

        if (isAuthenticated) {
            JOptionPane.showMessageDialog(this, "Login successful!");
            // Switch to the next page (HomePage)
            windowManager.switchToPage("Home");
        } else {
            JOptionPane.showMessageDialog(this, "Invalid email or password.");
        }
        
        emailField.setText(null);
        passwordField.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        container = new javax.swing.JPanel();
        top = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        imagePanel = new ResizableImage("logo.png");
        mid = new javax.swing.JPanel();
        clickablePanel = new javax.swing.JPanel();
        showPasswordCheckBox = new javax.swing.JCheckBox();
        loginButton = new javax.swing.JButton();
        writablePanel = new javax.swing.JPanel();
        labelPanel = new javax.swing.JPanel();
        emailLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        inputPanel = new javax.swing.JPanel();
        emailField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        bot = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        container.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(92, 158, 173)));
        container.setPreferredSize(new java.awt.Dimension(800, 300));
        container.setLayout(new java.awt.GridBagLayout());

        top.setOpaque(false);
        top.setLayout(new java.awt.GridBagLayout());

        titlePanel.setOpaque(false);
        titlePanel.setLayout(new java.awt.BorderLayout());

        loginLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 48)); // NOI18N
        loginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginLabel.setText("Log In");
        titlePanel.add(loginLabel, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        top.add(titlePanel, gridBagConstraints);

        imagePanel.setOpaque(false);
        imagePanel.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        top.add(imagePanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weighty = 1.0;
        container.add(top, gridBagConstraints);

        mid.setOpaque(false);
        mid.setLayout(new java.awt.GridBagLayout());

        clickablePanel.setOpaque(false);
        clickablePanel.setLayout(new java.awt.GridBagLayout());

        showPasswordCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        showPasswordCheckBox.setText("Show Password");
        showPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        clickablePanel.add(showPasswordCheckBox, gridBagConstraints);

        loginButton.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        loginButton.setText("Enter");
        loginButton.setPreferredSize(new java.awt.Dimension(110, 35));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        clickablePanel.add(loginButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(21, 0, 0, 0);
        mid.add(clickablePanel, gridBagConstraints);

        writablePanel.setOpaque(false);
        writablePanel.setLayout(new java.awt.GridBagLayout());

        labelPanel.setOpaque(false);
        labelPanel.setLayout(new java.awt.GridBagLayout());

        emailLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        emailLabel.setText("Email:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        labelPanel.add(emailLabel, gridBagConstraints);

        passwordLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        passwordLabel.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        labelPanel.add(passwordLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        writablePanel.add(labelPanel, gridBagConstraints);

        inputPanel.setOpaque(false);
        inputPanel.setLayout(new java.awt.GridBagLayout());

        emailField.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        emailField.setPreferredSize(new java.awt.Dimension(250, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        inputPanel.add(emailField, gridBagConstraints);

        passwordField.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        passwordField.setPreferredSize(new java.awt.Dimension(250, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        inputPanel.add(passwordField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        writablePanel.add(inputPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 34, 0, 0);
        mid.add(writablePanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        container.add(mid, gridBagConstraints);

        bot.setOpaque(false);
        bot.setLayout(new java.awt.BorderLayout());

        controlPanel.setOpaque(false);

        backButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        backButton.setText("Back");

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(27, 27, 27))
        );

        bot.add(controlPanel, java.awt.BorderLayout.SOUTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weighty = 1.0;
        container.add(bot, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        add(container, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        login();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void showPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordCheckBoxActionPerformed
        togglePasswordVisibility();
    }//GEN-LAST:event_showPasswordCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JPanel bot;
    private javax.swing.JPanel clickablePanel;
    private javax.swing.JPanel container;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel mid;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JCheckBox showPasswordCheckBox;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JPanel top;
    private javax.swing.JPanel writablePanel;
    // End of variables declaration//GEN-END:variables
}
